// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScavengerHunt.Infrastructure;

#nullable disable

namespace ScavengerHunt.Infrastructure.Migrations
{
    [DbContext(typeof(ScavHuntDbContext))]
    [Migration("20240328160950_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScavengerHunt.Domain.Entities.Hunt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScavengerHunts");
                });

            modelBuilder.Entity("ScavengerHunt.Domain.Entities.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HuntId")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HuntId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("ScavengerHunt.Domain.Entities.TaskBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TaskBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ScavengerHunt.Domain.Entities.TaskQuestionAnswer", b =>
                {
                    b.HasBaseType("ScavengerHunt.Domain.Entities.TaskBase");

                    b.Property<string>("ExpectedAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StationId")
                        .HasColumnType("int");

                    b.HasIndex("StationId");

                    b.HasDiscriminator().HasValue("TaskQuestionAnswer");
                });

            modelBuilder.Entity("ScavengerHunt.Domain.Entities.TaskText", b =>
                {
                    b.HasBaseType("ScavengerHunt.Domain.Entities.TaskBase");

                    b.Property<int?>("StationId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("StationId");

                    b.ToTable("Tasks", t =>
                        {
                            t.Property("StationId")
                                .HasColumnName("TaskText_StationId");
                        });

                    b.HasDiscriminator().HasValue("TaskText");
                });

            modelBuilder.Entity("ScavengerHunt.Domain.Entities.Station", b =>
                {
                    b.HasOne("ScavengerHunt.Domain.Entities.Hunt", null)
                        .WithMany("Stations")
                        .HasForeignKey("HuntId");
                });

            modelBuilder.Entity("ScavengerHunt.Domain.Entities.TaskQuestionAnswer", b =>
                {
                    b.HasOne("ScavengerHunt.Domain.Entities.Station", null)
                        .WithMany("QuestionTasks")
                        .HasForeignKey("StationId");
                });

            modelBuilder.Entity("ScavengerHunt.Domain.Entities.TaskText", b =>
                {
                    b.HasOne("ScavengerHunt.Domain.Entities.Station", null)
                        .WithMany("TextTasks")
                        .HasForeignKey("StationId");
                });

            modelBuilder.Entity("ScavengerHunt.Domain.Entities.Hunt", b =>
                {
                    b.Navigation("Stations");
                });

            modelBuilder.Entity("ScavengerHunt.Domain.Entities.Station", b =>
                {
                    b.Navigation("QuestionTasks");

                    b.Navigation("TextTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
