// <auto-generated />
using Hunts.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hunts.Infrastructure.Migrations
{
    [DbContext(typeof(HuntsDbContext))]
    partial class HuntsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Hunts.Domain.Entities.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HintId")
                        .HasColumnType("int");

                    b.Property<int>("HuntId")
                        .HasColumnType("int");

                    b.Property<int>("SolutionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HuntId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("Hunts.Domain.Entities.Hint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HintType")
                        .HasColumnType("int");

                    b.Property<string>("additionalData")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId")
                        .IsUnique();

                    b.ToTable("Hint");
                });

            modelBuilder.Entity("Hunts.Domain.Entities.Hunt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ScavengerHunts");
                });

            modelBuilder.Entity("Hunts.Domain.Entities.Solution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SolutionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId")
                        .IsUnique();

                    b.ToTable("Solution");
                });

            modelBuilder.Entity("Hunts.Domain.Entities.Assignment", b =>
                {
                    b.HasOne("Hunts.Domain.Entities.Hunt", "Hunt")
                        .WithMany("Assignments")
                        .HasForeignKey("HuntId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hunt");
                });

            modelBuilder.Entity("Hunts.Domain.Entities.Hint", b =>
                {
                    b.HasOne("Hunts.Domain.Entities.Assignment", "Assignment")
                        .WithOne("Hint")
                        .HasForeignKey("Hunts.Domain.Entities.Hint", "AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("Hunts.Domain.Entities.Solution", b =>
                {
                    b.HasOne("Hunts.Domain.Entities.Assignment", "Assignment")
                        .WithOne("Solution")
                        .HasForeignKey("Hunts.Domain.Entities.Solution", "AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("Hunts.Domain.Entities.Assignment", b =>
                {
                    b.Navigation("Hint")
                        .IsRequired();

                    b.Navigation("Solution")
                        .IsRequired();
                });

            modelBuilder.Entity("Hunts.Domain.Entities.Hunt", b =>
                {
                    b.Navigation("Assignments");
                });
#pragma warning restore 612, 618
        }
    }
}
